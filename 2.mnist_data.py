# -*- coding: utf-8 -*-
"""MNIST_DATA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y_M9gXjmSkBvwaet4k5R3stn1dH5tFdy
"""

import tensorflow
from tensorflow import keras
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense,Flatten

#Dataset is already avilable
(X_train,y_train),(X_test,y_test) = keras.datasets.mnist.load_data()

X_test.shape # total 10000 matrix and each matrix is of 28*28

import matplotlib.pyplot as plt
plt.imshow(X_train[2])

#kind of standadization for easy conversion
X_train = X_train/255
X_test = X_test/255

model = Sequential()

model.add(Flatten(input_shape=(28,28)))
model.add(Dense(128,activation='relu'))
model.add(Dense(32,activation='relu'))
model.add(Dense(10,activation='softmax'))

model.summary()

model.compile(loss='sparse_categorical_crossentropy',optimizer='Adam',metrics=['accuracy'])

model.fit(X_train,y_train,epochs=25,validation_split=0.2)

y_prob = model.predict(X_test)

y_pred = y_prob.argmax(axis=1)



from sklearn.metrics import accuracy_score
accuracy_score(y_test,y_pred)

plt.imshow(X_test[1])

model.predict(X_test[1].reshape(1,28,28)).argmax(axis=1)

